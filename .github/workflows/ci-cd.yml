name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Backend - Install Dependencies
        run: |
          cd backend
          npm install
      
      - name: Backend - Lint Check
        run: |
          cd backend
          npm install eslint -g || true
          eslint . --ext .js || true
          
      - name: Frontend - Install Dependencies
        run: |
          cd frontend
          npm install
          
      - name: Frontend - Lint Check
        run: |
          cd frontend
          npm run lint || true
          
      - name: Frontend - Build Check
        run: |
          cd frontend
          npm run build
          
  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      # Deploy to Render using Deploy Hook URL
      - name: Deploy Backend to Render
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
          
      # Deploy Frontend to Vercel
      - name: Setup Vercel CLI
        run: npm install -g vercel
          
      - name: Deploy Frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          cd frontend
          vercel pull --yes --environment=production --token $VERCEL_TOKEN
          vercel build --prod --token $VERCEL_TOKEN
          vercel deploy --prebuilt --prod --token $VERCEL_TOKEN